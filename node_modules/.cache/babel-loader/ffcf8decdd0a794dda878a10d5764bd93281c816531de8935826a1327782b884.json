{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./Quiz-Rank.css';// Đảm bảo đã thêm CSS cho phần tử\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function QuizRank(_ref){let{quizID}=_ref;const[topPlayers,setTopPlayers]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const apiKey='oqKbBxKcEn9l4IXE4EqS2sgNzXPFvE';const formatTime=time=>{const minutes=String(Math.floor(time/60000)).padStart(2,'0');const seconds=String(Math.floor(time%60000/1000)).padStart(2,'0');const milliseconds=String(time%1000).padStart(3,'0');return\"\".concat(minutes,\" : \").concat(seconds,\" : \").concat(milliseconds);};useEffect(()=>{// Gọi API để lấy dữ liệu người chơi\nconst fetchTopPlayers=async()=>{try{if(!quizID){throw new Error(\"QuizID is not provided.\");}const response=await fetch(\"http://admin.tducoin.com/api/quiz/getUsersByQuizID/\".concat(quizID),{method:\"GET\",headers:{\"x-api-key\":apiKey,\"Content-Type\":\"application/json\"}});if(!response.ok){throw new Error(\"Error: \".concat(response.statusText));}const data=await response.json();if(data&&data.data){setTopPlayers(data.data);// Cập nhật dữ liệu\n}else{throw new Error(\"Invalid API response structure.\");}}catch(err){setError(err.message);// Lưu lỗi vào state\n}finally{setLoading(false);}};fetchTopPlayers();},[quizID]);// Sử dụng quizID trong dependency array\nif(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});const BASE_URL=\"http://admin.tducoin.com/public/storage/\";return/*#__PURE__*/_jsx(\"div\",{className:\"card-container\",children:topPlayers.map((player,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rank\",children:[\"#\",index+1]}),/*#__PURE__*/_jsx(\"div\",{className:\"quizrank-circle\",children:/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(BASE_URL).concat(player.user.avatar)||'/default-avatar.png',alt:\"Avatar \".concat(index+1),className:\"avatar-image\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"rank-name\",children:player.user.name})]}),/*#__PURE__*/_jsx(\"div\",{className:\"rank-time\",children:formatTime(player.score)})]}),index<topPlayers.length-1&&/*#__PURE__*/_jsx(\"div\",{className:\"card-divider\"})]},player.id))});}export default QuizRank;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","QuizRank","_ref","quizID","topPlayers","setTopPlayers","loading","setLoading","error","setError","apiKey","formatTime","time","minutes","String","Math","floor","padStart","seconds","milliseconds","concat","fetchTopPlayers","Error","response","fetch","method","headers","ok","statusText","data","json","err","message","children","BASE_URL","className","map","player","index","src","user","avatar","alt","name","score","length","id"],"sources":["/Users/hcmhoh02hhul217/Documents/web/webapp-tada/src/components/Quiz-Rank.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Quiz-Rank.css'; // Đảm bảo đã thêm CSS cho phần tử\r\n\r\nfunction QuizRank({ quizID }) {\r\n  const [topPlayers, setTopPlayers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const apiKey = 'oqKbBxKcEn9l4IXE4EqS2sgNzXPFvE';\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = String(Math.floor(time / 60000)).padStart(2, '0');\r\n    const seconds = String(Math.floor((time % 60000) / 1000)).padStart(2, '0');\r\n    const milliseconds = String(time % 1000).padStart(3, '0');\r\n    return `${minutes} : ${seconds} : ${milliseconds}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Gọi API để lấy dữ liệu người chơi\r\n    const fetchTopPlayers = async () => {\r\n      try {\r\n        if (!quizID) {\r\n          throw new Error(\"QuizID is not provided.\");\r\n        }\r\n\r\n        const response = await fetch(`http://admin.tducoin.com/api/quiz/getUsersByQuizID/${quizID}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-api-key\": apiKey,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Error: ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        if (data && data.data) {\r\n          setTopPlayers(data.data); // Cập nhật dữ liệu\r\n        } else {\r\n          throw new Error(\"Invalid API response structure.\");\r\n        }\r\n      } catch (err) {\r\n        setError(err.message); // Lưu lỗi vào state\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTopPlayers();\r\n  }, [quizID]); // Sử dụng quizID trong dependency array\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  const BASE_URL = \"http://admin.tducoin.com/public/storage/\";\r\n\r\n  return (\r\n    <div className=\"card-container\">\r\n      {topPlayers.map((player, index) => (\r\n        <div key={player.id}>\r\n          <div className=\"card-row\">\r\n            <div className=\"left-section\">\r\n              <div className=\"rank\">#{index + 1}</div>\r\n              <div className=\"quizrank-circle\">\r\n              <img src={`${BASE_URL}${player.user.avatar}` || '/default-avatar.png'} alt={`Avatar ${index + 1}`} className=\"avatar-image\" />\r\n              </div>\r\n              <div className=\"rank-name\">{player.user.name}</div>\r\n            </div>\r\n            <div className=\"rank-time\">{formatTime(player.score)}</div>\r\n          </div>\r\n          {index < topPlayers.length - 1 && <div className=\"card-divider\"></div>}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizRank;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}