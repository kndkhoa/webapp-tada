{"ast":null,"code":"var _jsxFileName = \"/Users/hcmhoh02hhul217/Documents/web/webapp-tada/src/pages/QuizStarting.js\",\n  _s = $RefreshSig$();\n// src/components/QuizStarting.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport useQuestions from '../components/questions'; // Import custom Hook\nimport coinIcon from '../components/assets/icons/coin-header.png'; // Import icon coin\nimport './QuizStarting.css'; // Import CSS\nimport ResultCard from '../components/ResultCard'; // Import ResultCard component\n\n// Import âm thanh\nimport correctSound from '../components/assets/sounds/correct-answer.mp3';\nimport incorrectSound from '../components/assets/sounds/incorrect-answer.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizStarting = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Lấy quiz.id từ URL\n  const [quiz] = useSearchParams(); // Lấy tham số từ URL\n  const collection_id = quiz.get('collection_id'); // Lấy collection_id từ URL\n  const {\n    questions,\n    loading,\n    error\n  } = useQuestions(collection_id); // Gọi custom Hook với collection_id\n\n  const [selectedAnswer, setSelectedAnswer] = useState(null); // Đáp án được chọn\n  const [questionNumber, setQuestionNumber] = useState(0); // Câu hỏi hiện tại (index)\n  const [isCorrect, setIsCorrect] = useState(null); // Kết quả đúng/sai\n  const [isSubmitted, setIsSubmitted] = useState(false); // Trạng thái đã kiểm tra\n  const [quizCompleted, setQuizCompleted] = useState(false); // Trạng thái hoàn thành bài thi\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0); // Số câu đúng\n  const [timer, setTimer] = useState(0); // Tổng thời gian (ms)\n  const timerRef = useRef(null); // Dùng để lưu tham chiếu đến interval\n\n  // Hiệu ứng âm thanh\n  const playSound = soundFile => {\n    const audio = new Audio(soundFile);\n    audio.play();\n  };\n\n  // Hàm khởi động đồng hồ\n  const startTimer = () => {\n    if (!timerRef.current) {\n      timerRef.current = setInterval(() => {\n        setTimer(prev => prev + 10); // Cộng thêm 10ms mỗi lần\n      }, 10);\n    }\n  };\n\n  // Hàm tạm dừng đồng hồ\n  const pauseTimer = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n    }\n  };\n\n  // Hàm định dạng thời gian\n  const formatTime = time => {\n    const minutes = String(Math.floor(time / 60000)).padStart(2, '0');\n    const seconds = String(Math.floor(time % 60000 / 1000)).padStart(2, '0');\n    const milliseconds = String(time % 1000).padStart(3, '0');\n    return `${minutes} : ${seconds} : ${milliseconds}`;\n  };\n  useEffect(() => {\n    if (isSubmitted) {\n      if (isCorrect) {\n        playSound(correctSound);\n        setCorrectAnswersCount(prev => prev + 1); // Tăng số câu đúng khi đúng\n      } else {\n        playSound(incorrectSound);\n        // Hiệu ứng rung\n        if ('vibrate' in navigator) {\n          navigator.vibrate(300); // Rung trong 300ms\n        }\n      }\n    }\n  }, [isSubmitted]);\n  const handleAnswerClick = answer => {\n    if (!isSubmitted) {\n      setSelectedAnswer(answer);\n    }\n  };\n  const handleSubmit = () => {\n    if (!isSubmitted) {\n      pauseTimer();\n      const correctAnswer = questions[questionNumber].correctAnswer;\n      const result = selectedAnswer === correctAnswer;\n      setIsCorrect(result);\n      setIsSubmitted(true);\n      if (questionNumber === questions.length - 1) {\n        setQuizCompleted(true);\n      }\n    } else {\n      if (questionNumber < questions.length - 1) {\n        setQuestionNumber(prev => prev + 1);\n        setSelectedAnswer(null);\n        setIsCorrect(null);\n        setIsSubmitted(false);\n        startTimer();\n      } else {\n        pauseTimer();\n        setQuizCompleted(true);\n      }\n    }\n  };\n  useEffect(() => {\n    startTimer();\n    return () => pauseTimer();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quizstarting-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizstarting-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quizstarting-score-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quizstarting-score\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: coinIcon,\n            alt: \"Coin Icon\",\n            className: \"quizstarting-coin-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"1000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quizstarting-question-number\",\n        children: [\"C\\xE2u \", questionNumber + 1, \" tr\\xEAn t\\u1ED5ng \", questions.length, \" c\\xE2u\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizstarting-timer-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quizstarting-timer\",\n        children: formatTime(timer)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizstarting-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[questionNumber].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"H\\xE3y ch\\u1ECDn m\\u1ED9t c\\xE2u tr\\u1EA3 l\\u1EDDi:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizstarting-answers\",\n      children: questions[questionNumber].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `quizstarting-answer \n              ${selectedAnswer === answer ? 'selected' : ''} \n              ${isSubmitted && answer === questions[questionNumber].correctAnswer ? 'correct' : ''} \n              ${isSubmitted && selectedAnswer === answer && selectedAnswer !== questions[questionNumber].correctAnswer ? 'incorrect' : ''}`,\n        onClick: () => handleAnswerClick(answer),\n        children: answer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `quizstarting-submit-button ${isSubmitted ? isCorrect ? 'correct' : 'incorrect' : ''}`,\n      onClick: handleSubmit,\n      disabled: !selectedAnswer && !isSubmitted,\n      children: isSubmitted ? 'Tiếp tục' : 'Kiểm tra'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), quizCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizstarting-result-card\",\n      children: /*#__PURE__*/_jsxDEV(ResultCard, {\n        quiz_id: id,\n        score: timer // Truyền thời gian dưới dạng số (ms)\n        ,\n        correctAnswers: correctAnswersCount // Truyền số câu đúng vào ResultCard\n        ,\n        totalQuestions: questions.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizStarting, \"qe5GfusZM3YU4mQ9bvkVpOeQWY4=\", false, function () {\n  return [useParams, useSearchParams, useQuestions];\n});\n_c = QuizStarting;\nexport default QuizStarting;\nvar _c;\n$RefreshReg$(_c, \"QuizStarting\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useSearchParams","useQuestions","coinIcon","ResultCard","correctSound","incorrectSound","jsxDEV","_jsxDEV","QuizStarting","_s","id","quiz","collection_id","get","questions","loading","error","selectedAnswer","setSelectedAnswer","questionNumber","setQuestionNumber","isCorrect","setIsCorrect","isSubmitted","setIsSubmitted","quizCompleted","setQuizCompleted","correctAnswersCount","setCorrectAnswersCount","timer","setTimer","timerRef","playSound","soundFile","audio","Audio","play","startTimer","current","setInterval","prev","pauseTimer","clearInterval","formatTime","time","minutes","String","Math","floor","padStart","seconds","milliseconds","navigator","vibrate","handleAnswerClick","answer","handleSubmit","correctAnswer","result","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","question","answers","map","index","onClick","disabled","quiz_id","score","correctAnswers","totalQuestions","_c","$RefreshReg$"],"sources":["/Users/hcmhoh02hhul217/Documents/web/webapp-tada/src/pages/QuizStarting.js"],"sourcesContent":["// src/components/QuizStarting.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport useQuestions from '../components/questions'; // Import custom Hook\nimport coinIcon from '../components/assets/icons/coin-header.png'; // Import icon coin\nimport './QuizStarting.css'; // Import CSS\nimport ResultCard from '../components/ResultCard'; // Import ResultCard component\n\n// Import âm thanh\nimport correctSound from '../components/assets/sounds/correct-answer.mp3';\nimport incorrectSound from '../components/assets/sounds/incorrect-answer.mp3';\n\nconst QuizStarting = () => {\n  const { id } = useParams(); // Lấy quiz.id từ URL\n  const [quiz] = useSearchParams(); // Lấy tham số từ URL\n  const collection_id = quiz.get('collection_id'); // Lấy collection_id từ URL\n  const { questions, loading, error } = useQuestions(collection_id); // Gọi custom Hook với collection_id\n\n  const [selectedAnswer, setSelectedAnswer] = useState(null); // Đáp án được chọn\n  const [questionNumber, setQuestionNumber] = useState(0); // Câu hỏi hiện tại (index)\n  const [isCorrect, setIsCorrect] = useState(null); // Kết quả đúng/sai\n  const [isSubmitted, setIsSubmitted] = useState(false); // Trạng thái đã kiểm tra\n  const [quizCompleted, setQuizCompleted] = useState(false); // Trạng thái hoàn thành bài thi\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0); // Số câu đúng\n  const [timer, setTimer] = useState(0); // Tổng thời gian (ms)\n  const timerRef = useRef(null); // Dùng để lưu tham chiếu đến interval\n\n  // Hiệu ứng âm thanh\n  const playSound = (soundFile) => {\n    const audio = new Audio(soundFile);\n    audio.play();\n  };\n\n  // Hàm khởi động đồng hồ\n  const startTimer = () => {\n    if (!timerRef.current) {\n      timerRef.current = setInterval(() => {\n        setTimer((prev) => prev + 10); // Cộng thêm 10ms mỗi lần\n      }, 10);\n    }\n  };\n\n  // Hàm tạm dừng đồng hồ\n  const pauseTimer = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n    }\n  };\n\n  // Hàm định dạng thời gian\n  const formatTime = (time) => {\n    const minutes = String(Math.floor(time / 60000)).padStart(2, '0');\n    const seconds = String(Math.floor((time % 60000) / 1000)).padStart(2, '0');\n    const milliseconds = String(time % 1000).padStart(3, '0');\n    return `${minutes} : ${seconds} : ${milliseconds}`;\n  };\n\n  useEffect(() => {\n    if (isSubmitted) {\n      if (isCorrect) {\n        playSound(correctSound);\n        setCorrectAnswersCount((prev) => prev + 1); // Tăng số câu đúng khi đúng\n      } else {\n        playSound(incorrectSound);\n        // Hiệu ứng rung\n        if ('vibrate' in navigator) {\n          navigator.vibrate(300); // Rung trong 300ms\n        }\n      }\n    }\n  }, [isSubmitted]);\n\n  const handleAnswerClick = (answer) => {\n    if (!isSubmitted) {\n      setSelectedAnswer(answer);\n    }\n  };\n\n  const handleSubmit = () => {\n    if (!isSubmitted) {\n      pauseTimer();\n      const correctAnswer = questions[questionNumber].correctAnswer;\n      const result = selectedAnswer === correctAnswer;\n      setIsCorrect(result);\n      setIsSubmitted(true);\n\n      if (questionNumber === questions.length - 1) {\n        setQuizCompleted(true);\n      }\n    } else {\n      if (questionNumber < questions.length - 1) {\n        setQuestionNumber((prev) => prev + 1);\n        setSelectedAnswer(null);\n        setIsCorrect(null);\n        setIsSubmitted(false);\n        startTimer();\n      } else {\n        pauseTimer();\n        setQuizCompleted(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    startTimer();\n    return () => pauseTimer();\n  }, []);\n\n  if (loading) return <div>Loading questions...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className=\"quizstarting-container\">\n      {/* Header */}\n      <div className=\"quizstarting-header\">\n        <div className=\"quizstarting-score-container\">\n          <div className=\"quizstarting-score\">\n            <img src={coinIcon} alt=\"Coin Icon\" className=\"quizstarting-coin-icon\" />\n            <span>1000</span> {/* Đây là điểm số */}\n          </div>\n        </div>\n        <div className=\"quizstarting-question-number\">\n          Câu {questionNumber + 1} trên tổng {questions.length} câu\n        </div>\n      </div>\n      <div className=\"quizstarting-timer-container\">\n        <div className=\"quizstarting-timer\">{formatTime(timer)}</div>\n      </div>\n\n      {/* Question */}\n      <div className=\"quizstarting-question\">\n        <h2>{questions[questionNumber].question}</h2>\n        <p>Hãy chọn một câu trả lời:</p>\n      </div>\n\n      {/* Answers */}\n      <div className=\"quizstarting-answers\">\n        {questions[questionNumber].answers.map((answer, index) => (\n          <div\n            key={index}\n            className={`quizstarting-answer \n              ${selectedAnswer === answer ? 'selected' : ''} \n              ${isSubmitted && answer === questions[questionNumber].correctAnswer ? 'correct' : ''} \n              ${isSubmitted && selectedAnswer === answer && selectedAnswer !== questions[questionNumber].correctAnswer ? 'incorrect' : ''}`}\n            onClick={() => handleAnswerClick(answer)}\n          >\n            {answer}\n          </div>\n        ))}\n      </div>\n\n      {/* Submit Button */}\n      <button\n        className={`quizstarting-submit-button ${isSubmitted ? (isCorrect ? 'correct' : 'incorrect') : ''}`}\n        onClick={handleSubmit}\n        disabled={!selectedAnswer && !isSubmitted}\n      >\n        {isSubmitted ? 'Tiếp tục' : 'Kiểm tra'}\n      </button>\n\n      {/* Hiển thị ResultCard sau khi bài thi hoàn thành */}\n      {quizCompleted && (\n        <div className=\"quizstarting-result-card\">\n          <ResultCard\n            quiz_id={id}\n            score={timer} // Truyền thời gian dưới dạng số (ms)\n            correctAnswers={correctAnswersCount} // Truyền số câu đúng vào ResultCard\n            totalQuestions={questions.length}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QuizStarting;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}