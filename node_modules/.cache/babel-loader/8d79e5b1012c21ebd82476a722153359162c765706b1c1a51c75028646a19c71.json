{"ast":null,"code":"// src/components/QuizStarting.js\nimport React,{useState,useEffect,useRef}from'react';import{useParams,useSearchParams}from'react-router-dom';import useQuestions from'../components/questions';// Import custom Hook\nimport coinIcon from'../components/assets/icons/coin-header.png';// Import icon coin\nimport'./QuizStarting.css';// Import CSS\nimport ResultCard from'../components/ResultCard';// Import ResultCard component\n// Import âm thanh\nimport correctSound from'../components/assets/sounds/correct-answer.mp3';import incorrectSound from'../components/assets/sounds/incorrect-answer.mp3';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuizStarting=()=>{const{id}=useParams();// Lấy quiz.id từ URL\nconst[quiz]=useSearchParams();// Lấy tham số từ URL\nconst collection_id=quiz.get('collection_id');// Lấy collection_id từ URL\nconst{questions,loading,error}=useQuestions(collection_id);// Gọi custom Hook với collection_id\nconst[selectedAnswer,setSelectedAnswer]=useState(null);// Đáp án được chọn\nconst[questionNumber,setQuestionNumber]=useState(0);// Câu hỏi hiện tại (index)\nconst[isCorrect,setIsCorrect]=useState(null);// Kết quả đúng/sai\nconst[isSubmitted,setIsSubmitted]=useState(false);// Trạng thái đã kiểm tra\nconst[quizCompleted,setQuizCompleted]=useState(false);// Trạng thái hoàn thành bài thi\nconst[correctAnswersCount,setCorrectAnswersCount]=useState(0);// Số câu đúng\nconst[timer,setTimer]=useState(0);// Tổng thời gian (ms)\nconst timerRef=useRef(null);// Dùng để lưu tham chiếu đến interval\n// Hiệu ứng âm thanh\nconst playSound=soundFile=>{const audio=new Audio(soundFile);audio.play();};// Hàm khởi động đồng hồ\nconst startTimer=()=>{if(!timerRef.current){timerRef.current=setInterval(()=>{setTimer(prev=>prev+10);// Cộng thêm 10ms mỗi lần\n},10);}};// Hàm tạm dừng đồng hồ\nconst pauseTimer=()=>{if(timerRef.current){clearInterval(timerRef.current);timerRef.current=null;}};// Hàm định dạng thời gian\nconst formatTime=time=>{const minutes=String(Math.floor(time/60000)).padStart(2,'0');const seconds=String(Math.floor(time%60000/1000)).padStart(2,'0');const milliseconds=String(time%1000).padStart(3,'0');return\"\".concat(minutes,\" : \").concat(seconds,\" : \").concat(milliseconds);};useEffect(()=>{if(isSubmitted){if(isCorrect){playSound(correctSound);setCorrectAnswersCount(prev=>prev+1);// Tăng số câu đúng khi đúng\n}else{playSound(incorrectSound);// Hiệu ứng rung\nif('vibrate'in navigator){navigator.vibrate(300);// Rung trong 300ms\n}}}},[isSubmitted]);const handleAnswerClick=answer=>{if(!isSubmitted){setSelectedAnswer(answer);}};const handleSubmit=()=>{if(!isSubmitted){pauseTimer();const correctAnswer=questions[questionNumber].correctAnswer;const result=selectedAnswer===correctAnswer;setIsCorrect(result);setIsSubmitted(true);if(questionNumber===questions.length-1){setQuizCompleted(true);}}else{if(questionNumber<questions.length-1){setQuestionNumber(prev=>prev+1);setSelectedAnswer(null);setIsCorrect(null);setIsSubmitted(false);startTimer();}else{pauseTimer();setQuizCompleted(true);}}};useEffect(()=>{startTimer();return()=>pauseTimer();},[]);if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading questions...\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});return/*#__PURE__*/_jsxs(\"div\",{className:\"quizstarting-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"quizstarting-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"quizstarting-score-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"quizstarting-score\",children:[/*#__PURE__*/_jsx(\"img\",{src:coinIcon,alt:\"Coin Icon\",className:\"quizstarting-coin-icon\"}),/*#__PURE__*/_jsx(\"span\",{children:\"1000\"}),\" \"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"quizstarting-question-number\",children:[\"C\\xE2u \",questionNumber+1,\" tr\\xEAn t\\u1ED5ng \",questions.length,\" c\\xE2u\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"quizstarting-timer-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"quizstarting-timer\",children:formatTime(timer)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"quizstarting-question\",children:[/*#__PURE__*/_jsx(\"h2\",{children:questions[questionNumber].question}),/*#__PURE__*/_jsx(\"p\",{children:\"H\\xE3y ch\\u1ECDn m\\u1ED9t c\\xE2u tr\\u1EA3 l\\u1EDDi:\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"quizstarting-answers\",children:questions[questionNumber].answers.map((answer,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"quizstarting-answer \\n              \".concat(selectedAnswer===answer?'selected':'',\" \\n              \").concat(isSubmitted&&answer===questions[questionNumber].correctAnswer?'correct':'',\" \\n              \").concat(isSubmitted&&selectedAnswer===answer&&selectedAnswer!==questions[questionNumber].correctAnswer?'incorrect':''),onClick:()=>handleAnswerClick(answer),children:answer},index))}),/*#__PURE__*/_jsx(\"button\",{className:\"quizstarting-submit-button \".concat(isSubmitted?isCorrect?'correct':'incorrect':''),onClick:handleSubmit,disabled:!selectedAnswer&&!isSubmitted,children:isSubmitted?'Tiếp tục':'Kiểm tra'}),quizCompleted&&/*#__PURE__*/_jsx(\"div\",{className:\"quizstarting-result-card\",children:/*#__PURE__*/_jsx(ResultCard,{quiz_id:id,score:timer// Truyền thời gian dưới dạng số (ms)\n,correctAnswers:correctAnswersCount// Truyền số câu đúng vào ResultCard\n,totalQuestions:questions.length})})]});};export default QuizStarting;","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useSearchParams","useQuestions","coinIcon","ResultCard","correctSound","incorrectSound","jsx","_jsx","jsxs","_jsxs","QuizStarting","id","quiz","collection_id","get","questions","loading","error","selectedAnswer","setSelectedAnswer","questionNumber","setQuestionNumber","isCorrect","setIsCorrect","isSubmitted","setIsSubmitted","quizCompleted","setQuizCompleted","correctAnswersCount","setCorrectAnswersCount","timer","setTimer","timerRef","playSound","soundFile","audio","Audio","play","startTimer","current","setInterval","prev","pauseTimer","clearInterval","formatTime","time","minutes","String","Math","floor","padStart","seconds","milliseconds","concat","navigator","vibrate","handleAnswerClick","answer","handleSubmit","correctAnswer","result","length","children","className","src","alt","question","answers","map","index","onClick","disabled","quiz_id","score","correctAnswers","totalQuestions"],"sources":["/Users/hcmhoh02hhul217/Documents/web/webapp-tada/src/pages/QuizStarting.js"],"sourcesContent":["// src/components/QuizStarting.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport useQuestions from '../components/questions'; // Import custom Hook\nimport coinIcon from '../components/assets/icons/coin-header.png'; // Import icon coin\nimport './QuizStarting.css'; // Import CSS\nimport ResultCard from '../components/ResultCard'; // Import ResultCard component\n\n// Import âm thanh\nimport correctSound from '../components/assets/sounds/correct-answer.mp3';\nimport incorrectSound from '../components/assets/sounds/incorrect-answer.mp3';\n\nconst QuizStarting = () => {\n  const { id } = useParams(); // Lấy quiz.id từ URL\n  const [quiz] = useSearchParams(); // Lấy tham số từ URL\n  const collection_id = quiz.get('collection_id'); // Lấy collection_id từ URL\n  const { questions, loading, error } = useQuestions(collection_id); // Gọi custom Hook với collection_id\n\n  const [selectedAnswer, setSelectedAnswer] = useState(null); // Đáp án được chọn\n  const [questionNumber, setQuestionNumber] = useState(0); // Câu hỏi hiện tại (index)\n  const [isCorrect, setIsCorrect] = useState(null); // Kết quả đúng/sai\n  const [isSubmitted, setIsSubmitted] = useState(false); // Trạng thái đã kiểm tra\n  const [quizCompleted, setQuizCompleted] = useState(false); // Trạng thái hoàn thành bài thi\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0); // Số câu đúng\n  const [timer, setTimer] = useState(0); // Tổng thời gian (ms)\n  const timerRef = useRef(null); // Dùng để lưu tham chiếu đến interval\n\n  // Hiệu ứng âm thanh\n  const playSound = (soundFile) => {\n    const audio = new Audio(soundFile);\n    audio.play();\n  };\n\n  // Hàm khởi động đồng hồ\n  const startTimer = () => {\n    if (!timerRef.current) {\n      timerRef.current = setInterval(() => {\n        setTimer((prev) => prev + 10); // Cộng thêm 10ms mỗi lần\n      }, 10);\n    }\n  };\n\n  // Hàm tạm dừng đồng hồ\n  const pauseTimer = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n    }\n  };\n\n  // Hàm định dạng thời gian\n  const formatTime = (time) => {\n    const minutes = String(Math.floor(time / 60000)).padStart(2, '0');\n    const seconds = String(Math.floor((time % 60000) / 1000)).padStart(2, '0');\n    const milliseconds = String(time % 1000).padStart(3, '0');\n    return `${minutes} : ${seconds} : ${milliseconds}`;\n  };\n\n  useEffect(() => {\n    if (isSubmitted) {\n      if (isCorrect) {\n        playSound(correctSound);\n        setCorrectAnswersCount((prev) => prev + 1); // Tăng số câu đúng khi đúng\n      } else {\n        playSound(incorrectSound);\n        // Hiệu ứng rung\n        if ('vibrate' in navigator) {\n          navigator.vibrate(300); // Rung trong 300ms\n        }\n      }\n    }\n  }, [isSubmitted]);\n\n  const handleAnswerClick = (answer) => {\n    if (!isSubmitted) {\n      setSelectedAnswer(answer);\n    }\n  };\n\n  const handleSubmit = () => {\n    if (!isSubmitted) {\n      pauseTimer();\n      const correctAnswer = questions[questionNumber].correctAnswer;\n      const result = selectedAnswer === correctAnswer;\n      setIsCorrect(result);\n      setIsSubmitted(true);\n\n      if (questionNumber === questions.length - 1) {\n        setQuizCompleted(true);\n      }\n    } else {\n      if (questionNumber < questions.length - 1) {\n        setQuestionNumber((prev) => prev + 1);\n        setSelectedAnswer(null);\n        setIsCorrect(null);\n        setIsSubmitted(false);\n        startTimer();\n      } else {\n        pauseTimer();\n        setQuizCompleted(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    startTimer();\n    return () => pauseTimer();\n  }, []);\n\n  if (loading) return <div>Loading questions...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className=\"quizstarting-container\">\n      {/* Header */}\n      <div className=\"quizstarting-header\">\n        <div className=\"quizstarting-score-container\">\n          <div className=\"quizstarting-score\">\n            <img src={coinIcon} alt=\"Coin Icon\" className=\"quizstarting-coin-icon\" />\n            <span>1000</span> {/* Đây là điểm số */}\n          </div>\n        </div>\n        <div className=\"quizstarting-question-number\">\n          Câu {questionNumber + 1} trên tổng {questions.length} câu\n        </div>\n      </div>\n      <div className=\"quizstarting-timer-container\">\n        <div className=\"quizstarting-timer\">{formatTime(timer)}</div>\n      </div>\n\n      {/* Question */}\n      <div className=\"quizstarting-question\">\n        <h2>{questions[questionNumber].question}</h2>\n        <p>Hãy chọn một câu trả lời:</p>\n      </div>\n\n      {/* Answers */}\n      <div className=\"quizstarting-answers\">\n        {questions[questionNumber].answers.map((answer, index) => (\n          <div\n            key={index}\n            className={`quizstarting-answer \n              ${selectedAnswer === answer ? 'selected' : ''} \n              ${isSubmitted && answer === questions[questionNumber].correctAnswer ? 'correct' : ''} \n              ${isSubmitted && selectedAnswer === answer && selectedAnswer !== questions[questionNumber].correctAnswer ? 'incorrect' : ''}`}\n            onClick={() => handleAnswerClick(answer)}\n          >\n            {answer}\n          </div>\n        ))}\n      </div>\n\n      {/* Submit Button */}\n      <button\n        className={`quizstarting-submit-button ${isSubmitted ? (isCorrect ? 'correct' : 'incorrect') : ''}`}\n        onClick={handleSubmit}\n        disabled={!selectedAnswer && !isSubmitted}\n      >\n        {isSubmitted ? 'Tiếp tục' : 'Kiểm tra'}\n      </button>\n\n      {/* Hiển thị ResultCard sau khi bài thi hoàn thành */}\n      {quizCompleted && (\n        <div className=\"quizstarting-result-card\">\n          <ResultCard\n            quiz_id={id}\n            score={timer} // Truyền thời gian dưới dạng số (ms)\n            correctAnswers={correctAnswersCount} // Truyền số câu đúng vào ResultCard\n            totalQuestions={questions.length}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QuizStarting;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}