{"ast":null,"code":"var _jsxFileName = \"/Users/hcmhoh02hhul217/Documents/web/webapp-tada/src/components/Quiz-Rank.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Quiz-Rank.css'; // Đảm bảo đã thêm CSS cho phần tử\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizRank({\n  quizID\n}) {\n  _s();\n  const [topPlayers, setTopPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const apiKey = 'oqKbBxKcEn9l4IXE4EqS2sgNzXPFvE';\n  const formatTime = time => {\n    const minutes = String(Math.floor(time / 60000)).padStart(2, '0');\n    const seconds = String(Math.floor(time % 60000 / 1000)).padStart(2, '0');\n    const milliseconds = String(time % 1000).padStart(3, '0');\n    return `${minutes} : ${seconds} : ${milliseconds}`;\n  };\n  useEffect(() => {\n    // Gọi API để lấy dữ liệu người chơi\n    const fetchTopPlayers = async () => {\n      try {\n        if (!quizID) {\n          throw new Error(\"QuizID is not provided.\");\n        }\n        const response = await fetch(`http://admin.tducoin.com/api/quiz/getUsersByQuizID/${quizID}`, {\n          method: \"GET\",\n          headers: {\n            \"x-api-key\": apiKey,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const data = await response.json();\n        if (data && data.data) {\n          setTopPlayers(data.data); // Cập nhật dữ liệu\n        } else {\n          throw new Error(\"Invalid API response structure.\");\n        }\n      } catch (err) {\n        setError(err.message); // Lưu lỗi vào state\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTopPlayers();\n  }, [quizID]); // Sử dụng quizID trong dependency array\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 21\n  }, this);\n  const BASE_URL = \"http://admin.tducoin.com/public/storage/\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: topPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rank\",\n            children: [\"#\", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quizrank-circle\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${BASE_URL}${player.user.avatar}` || '/default-avatar.png',\n              alt: `Avatar ${index + 1}`,\n              className: \"avatar-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rank-name\",\n            children: player.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rank-time\",\n          children: formatTime(player.score)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), index < topPlayers.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }, this)]\n    }, player.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizRank, \"KvufolU1uhn4OQG8GEqSzrxKFWQ=\");\n_c = QuizRank;\nexport default QuizRank;\nvar _c;\n$RefreshReg$(_c, \"QuizRank\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","QuizRank","quizID","_s","topPlayers","setTopPlayers","loading","setLoading","error","setError","apiKey","formatTime","time","minutes","String","Math","floor","padStart","seconds","milliseconds","fetchTopPlayers","Error","response","fetch","method","headers","ok","statusText","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","BASE_URL","className","map","player","index","src","user","avatar","alt","name","score","length","id","_c","$RefreshReg$"],"sources":["/Users/hcmhoh02hhul217/Documents/web/webapp-tada/src/components/Quiz-Rank.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Quiz-Rank.css'; // Đảm bảo đã thêm CSS cho phần tử\r\n\r\nfunction QuizRank({ quizID }) {\r\n  const [topPlayers, setTopPlayers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const apiKey = 'oqKbBxKcEn9l4IXE4EqS2sgNzXPFvE';\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = String(Math.floor(time / 60000)).padStart(2, '0');\r\n    const seconds = String(Math.floor((time % 60000) / 1000)).padStart(2, '0');\r\n    const milliseconds = String(time % 1000).padStart(3, '0');\r\n    return `${minutes} : ${seconds} : ${milliseconds}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Gọi API để lấy dữ liệu người chơi\r\n    const fetchTopPlayers = async () => {\r\n      try {\r\n        if (!quizID) {\r\n          throw new Error(\"QuizID is not provided.\");\r\n        }\r\n\r\n        const response = await fetch(`http://admin.tducoin.com/api/quiz/getUsersByQuizID/${quizID}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-api-key\": apiKey,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Error: ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        if (data && data.data) {\r\n          setTopPlayers(data.data); // Cập nhật dữ liệu\r\n        } else {\r\n          throw new Error(\"Invalid API response structure.\");\r\n        }\r\n      } catch (err) {\r\n        setError(err.message); // Lưu lỗi vào state\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTopPlayers();\r\n  }, [quizID]); // Sử dụng quizID trong dependency array\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  const BASE_URL = \"http://admin.tducoin.com/public/storage/\";\r\n\r\n  return (\r\n    <div className=\"card-container\">\r\n      {topPlayers.map((player, index) => (\r\n        <div key={player.id}>\r\n          <div className=\"card-row\">\r\n            <div className=\"left-section\">\r\n              <div className=\"rank\">#{index + 1}</div>\r\n              <div className=\"quizrank-circle\">\r\n              <img src={`${BASE_URL}${player.user.avatar}` || '/default-avatar.png'} alt={`Avatar ${index + 1}`} className=\"avatar-image\" />\r\n              </div>\r\n              <div className=\"rank-name\">{player.user.name}</div>\r\n            </div>\r\n            <div className=\"rank-time\">{formatTime(player.score)}</div>\r\n          </div>\r\n          {index < topPlayers.length - 1 && <div className=\"card-divider\"></div>}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizRank;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}