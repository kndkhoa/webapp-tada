{"ast":null,"code":"import _objectSpread from\"/Users/hcmhoh02hhul217/Documents/web/webapp-tada/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/components/ResultCard.js\nimport React,{useEffect}from'react';import{useNavigate}from'react-router-dom';import avatar from'./assets/avatar.gif';// Đường dẫn đến ảnh avatar\nimport'./ResultCard.css';// Import CSS riêng\nimport targetIcon from'../components/assets/icons/target.png';// Đảm bảo đường dẫn đúng\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ResultCard=_ref=>{let{quiz_id,correctAnswers,totalQuestions,score}=_ref;const navigate=useNavigate();// Hàm định dạng thời gian từ ms sang \"mm : ss : ms\"\nconst formatTime=time=>{const minutes=String(Math.floor(time/60000)).padStart(2,'0');const seconds=String(Math.floor(time%60000/1000)).padStart(2,'0');const milliseconds=String(time%1000).padStart(3,'0');return\"\".concat(minutes,\" : \").concat(seconds,\" : \").concat(milliseconds);};// Hàm xử lý khi nhấn nút \"Quay lại đấu trường\"\nconst handleBackToMenu=()=>{// Lưu kết quả lên backend\nsubmitResult();};const submitResult=async()=>{// Lấy userData từ sessionStorage\nconst cachedUserData=sessionStorage.getItem('userData');const userData=cachedUserData?JSON.parse(cachedUserData):null;if(!userData||!userData.userID){console.error('User data not found in sessionStorage. Cannot submit result.');return;}try{const response=await fetch('http://admin.tducoin.com/api/quiz/save-result',{method:'POST',headers:{'Content-Type':'application/json','x-api-key':'oqKbBxKcEn9l4IXE4EqS2sgNzXPFvE'// Sử dụng biến môi trường nếu có\n},body:JSON.stringify({userID:userData.userID,quizID:quiz_id,score:score,// Truyền score dưới dạng số (ms)\ncorrectAnswers:correctAnswers,totalQuestions:totalQuestions})});const result=await response.json();if(!response.ok){console.error('Failed to save quiz result:',result);}else{console.info('Quiz result saved successfully:',result);// Cập nhật sessionStorage với kết quả mới\nconst updatedUserData=_objectSpread(_objectSpread({},userData),{},{quiz_rank:[...(userData.quiz_rank||[]),{quizID:quiz_id,score:score,correctAnswers:correctAnswers}]});sessionStorage.setItem('userData',JSON.stringify(updatedUserData));console.info('Session updated successfully:',updatedUserData);// Điều hướng về đấu trường\nnavigate('/home');}}catch(error){console.error('Error while submitting quiz result:',error);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"overlay\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"result-card-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"result-card\",children:[/*#__PURE__*/_jsx(\"img\",{src:avatar,alt:\"Avatar\",className:\"result-card-avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-card-details\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Ch\\xFAc m\\u1EEBng b\\u1EA1n \\u0111\\xE3 ho\\xE0n th\\xE0nh ph\\u1EA7n th\\u1EED th\\xE1ch!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-card-box\",children:[/*#__PURE__*/_jsx(\"img\",{src:targetIcon,alt:\"Target Icon\",className:\"result-card-icon\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"result-card-answer\",children:[/*#__PURE__*/_jsxs(\"b\",{children:[correctAnswers,\"/\",totalQuestions]}),\" c\\xE2u tr\\u1EA3 l\\u1EDDi \\u0111\\xFAng\"]})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Ho\\xE0n th\\xE0nh trong\"}),/*#__PURE__*/_jsx(\"p\",{className:\"bold-text\",children:formatTime(score)})]}),/*#__PURE__*/_jsx(\"button\",{className:\"result-card-button\",onClick:handleBackToMenu,children:\"Quay l\\u1EA1i trang ch\\u1EE7\"})]})})]});};export default ResultCard;","map":{"version":3,"names":["React","useEffect","useNavigate","avatar","targetIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ResultCard","_ref","quiz_id","correctAnswers","totalQuestions","score","navigate","formatTime","time","minutes","String","Math","floor","padStart","seconds","milliseconds","concat","handleBackToMenu","submitResult","cachedUserData","sessionStorage","getItem","userData","JSON","parse","userID","console","error","response","fetch","method","headers","body","stringify","quizID","result","json","ok","info","updatedUserData","_objectSpread","quiz_rank","setItem","children","className","src","alt","onClick"],"sources":["/Users/hcmhoh02hhul217/Documents/web/webapp-tada/src/components/ResultCard.js"],"sourcesContent":["// src/components/ResultCard.js\r\nimport React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport avatar from './assets/avatar.gif'; // Đường dẫn đến ảnh avatar\r\nimport './ResultCard.css'; // Import CSS riêng\r\nimport targetIcon from '../components/assets/icons/target.png'; // Đảm bảo đường dẫn đúng\r\n\r\nconst ResultCard = ({ quiz_id, correctAnswers, totalQuestions, score }) => {\r\n  const navigate = useNavigate();\r\n\r\n  // Hàm định dạng thời gian từ ms sang \"mm : ss : ms\"\r\n  const formatTime = (time) => {\r\n    const minutes = String(Math.floor(time / 60000)).padStart(2, '0');\r\n    const seconds = String(Math.floor((time % 60000) / 1000)).padStart(2, '0');\r\n    const milliseconds = String(time % 1000).padStart(3, '0');\r\n    return `${minutes} : ${seconds} : ${milliseconds}`;\r\n  };\r\n\r\n  // Hàm xử lý khi nhấn nút \"Quay lại đấu trường\"\r\n  const handleBackToMenu = () => {\r\n    // Lưu kết quả lên backend\r\n    submitResult();\r\n  };\r\n\r\n  const submitResult = async () => {\r\n    // Lấy userData từ sessionStorage\r\n    const cachedUserData = sessionStorage.getItem('userData');\r\n    const userData = cachedUserData ? JSON.parse(cachedUserData) : null;\r\n\r\n    if (!userData || !userData.userID) {\r\n      console.error('User data not found in sessionStorage. Cannot submit result.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://admin.tducoin.com/api/quiz/save-result', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-api-key': 'oqKbBxKcEn9l4IXE4EqS2sgNzXPFvE', // Sử dụng biến môi trường nếu có\r\n        },\r\n        body: JSON.stringify({\r\n          userID: userData.userID,\r\n          quizID: quiz_id,\r\n          score: score, // Truyền score dưới dạng số (ms)\r\n          correctAnswers: correctAnswers,\r\n          totalQuestions: totalQuestions,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (!response.ok) {\r\n        console.error('Failed to save quiz result:', result);\r\n      } else {\r\n        console.info('Quiz result saved successfully:', result);\r\n\r\n        // Cập nhật sessionStorage với kết quả mới\r\n        const updatedUserData = {\r\n          ...userData,\r\n          quiz_rank: [\r\n            ...(userData.quiz_rank || []),\r\n            { quizID: quiz_id, score: score, correctAnswers: correctAnswers },\r\n          ],\r\n        };\r\n\r\n        sessionStorage.setItem('userData', JSON.stringify(updatedUserData));\r\n        console.info('Session updated successfully:', updatedUserData);\r\n\r\n        // Điều hướng về đấu trường\r\n        navigate('/home');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error while submitting quiz result:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"overlay\"></div> {/* Lớp overlay nền trắng */}\r\n      <div className=\"result-card-container\">\r\n        <div className=\"result-card\">\r\n          <img src={avatar} alt=\"Avatar\" className=\"result-card-avatar\" />\r\n          <div className=\"result-card-details\">\r\n            <h3>Chúc mừng bạn đã hoàn thành phần thử thách!</h3>\r\n\r\n            {/* Khung chữ nhật với icon và câu trả lời đúng nằm ở đây */}\r\n            <div className=\"result-card-box\">\r\n              <img src={targetIcon} alt=\"Target Icon\" className=\"result-card-icon\" />\r\n              <span className=\"result-card-answer\">\r\n                <b>{correctAnswers}/{totalQuestions}</b> câu trả lời đúng\r\n              </span>\r\n            </div>\r\n\r\n            <p>Hoàn thành trong</p>\r\n            <p className=\"bold-text\">{formatTime(score)}</p>\r\n          </div>\r\n\r\n          <button className=\"result-card-button\" onClick={handleBackToMenu}>\r\n            Quay lại trang chủ\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResultCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}